================================
QUICK REFERENCE: Import Reports
================================

ONE COMMAND - PASTE REPORT - DONE
----------------------------------

cd /Users/willb/Github/GSMC/facilities/scripts

# Interactive (paste text):
python import_from_report.py --country DZA --source "Algeria Report 2025"
[Paste report, then Ctrl+D]

# From file:
python import_from_report.py report.txt --country AFG --source "Afghanistan Report"

# From pipe:
cat report.txt | python import_from_report.py --country DZA --source "Report"

WHAT IT DOES
------------
✅ Extracts facility tables automatically
✅ Normalizes metals, types, status
✅ Checks for duplicates (tested & working!)
✅ Creates JSON files in config/facilities/{COUNTRY}/
✅ Generates detailed import report

DUPLICATE DETECTION (VERIFIED)
-------------------------------
Won't create duplicates if:
- Same facility ID exists
- Same name + location within ~1km
- Same name (when no coordinates available)
- Name matches an existing alias

Test results: 6/6 passed ✅

COUNTRY CODES
-------------
Algeria: DZA
Afghanistan: AFG
Australia: AUS
Canada: CAN
Chile: CHL
China: CHN
Peru: PER
USA: USA
(ISO 3166-1 alpha-3)

TROUBLESHOOTING
---------------
"No tables found"
  → Your report needs markdown tables with | separators
  → Or create a CSV manually with these columns:
    - Site/Mine Name (required)
    - Latitude, Longitude (recommended)
    - Primary Commodity, Asset Type, Operational Status

"Too many duplicates"
  → Check import_logs/*.json to see what matched
  → This is working correctly - it's preventing duplicates!

TEST DEDUPLICATION
------------------
python test_dedup.py

DOCUMENTATION
-------------
README_SIMPLE.md  - Simple usage guide
DEMO.md          - Live usage demo
RESEARCH_IMPORT_README.md - Full documentation

GET STARTED
-----------
1. Save your research report
2. Run: python import_from_report.py --country XXX --source "Report Name"
3. Paste report text
4. Press Ctrl+D
5. Done!
