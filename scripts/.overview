# Scripts Directory Overview

## Active Scripts

### import_from_report.py (19K) ⭐ NEW
**One-command import from research reports**
- Paste report text → automatically creates facility JSONs
- Built-in duplicate detection (tested & verified)
- Extracts tables, normalizes data, generates files
- Usage: `python import_from_report.py --country DZA --source "Report Name"`

### migrate_facilities.py (18K)
**Original CSV migration script**
- Migrates from Mines.csv to structured JSON format
- Integrates with entityidentity for normalization
- Creates facility files organized by country
- Generates per-metal indexes

### test_dedup.py (4.1K)
**Duplicate detection test suite**
- Verifies duplicate detection logic works correctly
- Tests 6 scenarios: ID match, name+location, aliases, etc.
- Usage: `python test_dedup.py`

### deep_research_integration.py (21K)
**Existing deep research integration**
- Pre-existing script for research integration
- (Purpose/usage TBD - not modified)

### pre_migration_validation.py (13K)
**Pre-migration validation checks**
- Validates data before migration
- (Purpose/usage TBD - not modified)

### test_migration_dry_run.py (9.0K)
**Migration dry run testing**
- Tests migration process without writing files
- (Purpose/usage TBD - not modified)

## Documentation

### README.md (4.8K)
**Complete usage guide**
- Quick start for import_from_report.py
- Country codes reference
- Troubleshooting guide
- Schema information

## Directory Structure

```
scripts/
├── README.md                      # Main documentation
├── import_from_report.py          # ⭐ New unified import pipeline
├── test_dedup.py                  # Test duplicate detection
├── migrate_facilities.py          # Original CSV migration
├── deep_research_integration.py   # Existing integration
├── pre_migration_validation.py    # Validation checks
└── test_migration_dry_run.py      # Dry run testing
```

## Quick Reference

**Import new research report:**
```bash
# Step 1: Save report
cat > report.txt
[Paste, Ctrl+D]

# Step 2: Import
python import_from_report.py report.txt --country XXX --source "Report Name"
```

**Or use clipboard directly (Mac):**
```bash
pbpaste > report.txt
python import_from_report.py report.txt --country XXX --source "Report"
```

**Test duplicate detection:**
```bash
python test_dedup.py
```

**Migrate from CSV:**
```bash
python migrate_facilities.py
```

See README.md for complete documentation or USAGE_QUICK.txt for quick reference.
